* {
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 20px;
  background-color: #f4f4f4;
}

h1,
h2 {
  text-align: center;
}

.wrapper {
  max-width: 940px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
  grid-auto-rows: minmax(100px, auto);
  border: 2px solid #000;
  padding: 10px;
  margin-top: 20px;
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.wrapper > div {
  border: 2px solid rgb(233 171 88);
  border-radius: 5px;
  background-color: rgb(233 171 88 / 50%);
  padding: 1em;
  color: #d9480f;
  text-align: center;
  font-size: 40px;
  transition: background-color 0.3s;
}

.wrapper > div:hover {
  background-color: #45a049;
}

.one {
  grid-column: 1 / 3;
  grid-row: 1;
}

/* NOTE
grid-column: 1 / 3;: This property defines how the element spans across columns in a CSS Grid layout. It starts at column line 1 and spans to column line 3, covering two columns.
grid-row: 1;: This property defines the row position of the element in a CSS Grid layout. It starts and ends at row line 1, meaning it occupies only the first row.
*/

.two {
  grid-column: 2 / 4;
  grid-row: 1 / 3;
}

.three {
  grid-column: 1;
  grid-row: 2 / 5;
}

.four {
  grid-column: 3;
  grid-row: 3;
}

.five {
  grid-column: 2;
  grid-row: 4;
}

.six {
  grid-column: 3;
  grid-row: 4;
}
